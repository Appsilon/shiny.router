[{"path":"https://appsilon.github.io/shiny.router/CHANGELOG.html","id":null,"dir":"","previous_headings":"","what":"Change Log","title":"Change Log","text":"notable changes project documented file. format based Keep Changelog.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://appsilon.github.io/shiny.router/CHANGELOG.html","id":"added-1","dir":"","previous_headings":"[0.2.0] - 2020-10-30","what":"Added","title":"Change Log","text":"shiny.router.js bindings change routing subpage based follows hashstring shiny.router.css class .router-hidden contains content subpage get_query_param function new documentation vignette tutorial","code":""},{"path":"https://appsilon.github.io/shiny.router/CHANGELOG.html","id":"changed-1","dir":"","previous_headings":"[0.2.0] - 2020-10-30","what":"Changed","title":"Change Log","text":"way calling router ui, now one object fields: server ui parameters go hash now","code":""},{"path":"https://appsilon.github.io/shiny.router/CHANGELOG.html","id":"fixed-1","dir":"","previous_headings":"[0.2.0] - 2020-10-30","what":"Fixed","title":"Change Log","text":"route_link() keeps root url lose path double loading using browser back button stopped rerendering whole page","code":""},{"path":"https://appsilon.github.io/shiny.router/CHANGELOG.html","id":"removed-1","dir":"","previous_headings":"[0.2.0] - 2020-10-30","what":"Removed","title":"Change Log","text":"router_ui() function old router object (eg. replaced new router list)","code":""},{"path":[]},{"path":"https://appsilon.github.io/shiny.router/CHANGELOG.html","id":"added-2","dir":"","previous_headings":"0.1.0 - 2016-12-05","what":"Added","title":"Change Log","text":"Basic path routing mechanism Documentation","code":""},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tutorial: shiny.router in Rhino applications","text":"rhino shiny framework focused building applications best software engineering practices mind. tutorial show can use shiny.router Rhino app. can read rhino documentation page.","code":""},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"setup-rhino-application","dir":"Articles","previous_headings":"","what":"Setup Rhino application","title":"Tutorial: shiny.router in Rhino applications","text":"first step create Rhino application. , make sure rhino installed: Now, initialize new Rhino application. can either using RStudio Wizard function rhino::init(\"rhino_router\"). details create Rhino app can found Rhino tutorial.","code":"install.packages(\"rhino\")"},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"add-the-basic-content","dir":"Articles","previous_headings":"","what":"Add the basic content","title":"Tutorial: shiny.router in Rhino applications","text":"speed things , use basic version Rhino application described Rhino tutorial.","code":""},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"add-dependencies","dir":"Articles","previous_headings":"Add the basic content","what":"Add dependencies","title":"Tutorial: shiny.router in Rhino applications","text":"First, need add required dependencies: Install dependencies: Add dependencies dependencies.R file: Update renv.lock file: want learn dependency management Rhino, check guide.","code":"# In the R console renv::install(c(\"dplyr\", \"echarts4r\", \"htmlwidgets\", \"reactable\", \"tidyr\")) # dependencies.R  # This file allows packrat (used by rsconnect during deployment) to pick up dependencies. library(dplyr) library(echarts4r) library(htmlwidgets) library(reactable) library(rhino) library(tidyr) # in R console renv::snapshot()"},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"add-content","dir":"Articles","previous_headings":"Add the basic content","what":"Add content","title":"Tutorial: shiny.router in Rhino applications","text":"Next, need fill application content. app/logic add two files, chart_utils.R data_transformation.R: add two views - chart table. app/view add chart.R table.R files: last step update app/main.R: Now can run application shiny::runApp() (“Run app” button, use RStudio). see something like :","code":"# app/logic/chart_utils.R  box::use(   htmlwidgets[JS], )  #' @export label_formatter <- JS(\"(value, index) => value\") # app/logic/data_transformation.R  box::use(   dplyr[arrange],   tidyr[pivot_wider], )  #' @export transform_data <- function(data) {   pivot_wider(     data = data,     names_from = Species,     values_from = Population   ) |>     arrange(Year) } # app/view/chart.R  box::use(   echarts4r,   shiny[h3, moduleServer, NS, tagList], ) box::use(   app/logic/chart_utils[label_formatter], )  #' @export ui <- function(id) {   ns <- NS(id)    tagList(     h3(\"Chart\"),     echarts4r$echarts4rOutput(ns(\"chart\"))   ) }  #' @export server <- function(id, data) {   moduleServer(id, function(input, output, session) {     output$chart <- echarts4r$renderEcharts4r(       data |>         echarts4r$group_by(Species) |>         echarts4r$e_chart(x = Year) |>         echarts4r$e_line(Population) |>         echarts4r$e_x_axis(           Year,           axisLabel = list(             formatter = label_formatter           )         ) |>         echarts4r$e_tooltip()     )   }) } # app/view/table.R  box::use(   reactable,   shiny[h3, moduleServer, NS, tagList], ) box::use(   app/logic/data_transformation[transform_data], )  #' @export ui <- function(id) {   ns <- NS(id)    tagList(     h3(\"Table\"),     reactable$reactableOutput(ns(\"table\"))   ) }  #' @export server <- function(id, data) {   moduleServer(id, function(input, output, session) {     output$table <- reactable$renderReactable(       data |>         transform_data() |>         reactable$reactable()     )   }) } # app/main.R  box::use(   shiny[bootstrapPage, moduleServer, NS], )  box::use(   app/view/chart,   app/view/table, )  #' @export ui <- function(id) {   ns <- NS(id)    bootstrapPage(     table$ui(ns(\"table\")),     chart$ui(ns(\"chart\"))   ) }  #' @export server <- function(id) {   moduleServer(id, function(input, output, session) {     # Datasets are the only case when you need to use :: in `box`.     # This issue should be solved in the next `box` release.     data <- rhino::rhinos      table$server(\"table\", data = data)     chart$server(\"chart\", data = data)   }) }"},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"add-router","dir":"Articles","previous_headings":"","what":"Add router","title":"Tutorial: shiny.router in Rhino applications","text":"Next, let us move table chart separate pages using shiny.router.","code":""},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"install-shiny-router","dir":"Articles","previous_headings":"Add router","what":"Install shiny.router","title":"Tutorial: shiny.router in Rhino applications","text":"First, need install : add dependencies.R file: update renv.lock file:","code":"# In R console renv::install(\"shiny.router\") # dependencies.R  # This file allows packrat (used by rsconnect during deployment) to pick up dependencies. library(dplyr) library(echarts4r) library(htmlwidgets) library(reactable) library(rhino) library(shiny.router) library(tidyr) # in R console renv::snapshot()"},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"add-routing","dir":"Articles","previous_headings":"Add router","what":"Add routing","title":"Tutorial: shiny.router in Rhino applications","text":"enable routes application need modify app/main.R file: Import shiny.router functions: Wrap UI modules router_ui: module needs called inside route function. first argument route UI placed (example now chart available {app url}/chart). Add router_server server part main module: important thing mention provide default route (“table”) displayed someone opens application. Now, run application, see table. check chart, need change URL replace “table” “chart”:","code":"# app/main.R  box::use(   shiny[bootstrapPage, moduleServer, NS],   shiny.router[router_ui, router_server, route] )  ... # app/main.R  box::use(   shiny[bootstrapPage, moduleServer, NS],   shiny.router[router_ui, router_server, route] )  box::use(   app/view/chart,   app/view/table, )  #' @export ui <- function(id) {   ns <- NS(id)    bootstrapPage(     router_ui(       route(\"table\", table$ui(ns(\"table\"))),       route(\"chart\", chart$ui(ns(\"chart\")))     )   ) }  ... # app/main.R  box::use(   shiny[bootstrapPage, moduleServer, NS],   shiny.router[router_ui, router_server, route] )  box::use(   app/view/chart,   app/view/table, )  #' @export ui <- function(id) {   ns <- NS(id)    bootstrapPage(     router_ui(       route(\"table\", table$ui(ns(\"table\"))),       route(\"chart\", chart$ui(ns(\"chart\")))     )   ) }  #' @export server <- function(id) {   moduleServer(id, function(input, output, session) {     router_server(\"table\")      # Datasets are the only case when you need to use :: in `box`.     # This issue should be solved in the next `box` release.     data <- rhino::rhinos      table$server(\"table\", data = data)     chart$server(\"chart\", data = data)   }) }"},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"change-pages-from-ui","dir":"Articles","previous_headings":"","what":"Change pages from UI","title":"Tutorial: shiny.router in Rhino applications","text":"Using URL change view seem easiest way, need add navigation. avoid reinventing wheel, utilize Bootstrap CSS classes available shiny. Let’s add navbar two links - one view: Import required functions shiny shiny.router: Add navbar: Now, route_link function build links views. user can simply click button navbar open table chart:","code":"# app/main.R  box::use(   shiny[a, bootstrapPage, moduleServer, tags, NS],   shiny.router[router_ui, router_server, route, route_link], )  ... # app/main.R  box::use(   shiny[a, bootstrapPage, moduleServer, tags, NS],   shiny.router[router_ui, router_server, route, route_link], )  box::use(   app/view/chart,   app/view/table, )  #' @export ui <- function(id) {   ns <- NS(id)    bootstrapPage(     tags$nav(       class = \"navbar\",       tags$ul(         class = \"nav navbar-nav\",         tags$li(           a(\"Table\", href = route_link(\"table\"))         ),         tags$li(           a(\"Chart\", href = route_link(\"chart\"))         )       )     ),     router_ui(       route(\"table\", table$ui(ns(\"table\"))),       route(\"chart\", chart$ui(ns(\"chart\")))     )   ) }  ..."},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"change-pages-from-the-server","dir":"Articles","previous_headings":"","what":"Change pages from the server","title":"Tutorial: shiny.router in Rhino applications","text":"displayed page can also changed server part application. demonstrate , add another page - introduction buttons move user either chart table page. First, create intro.R file app/view directory. start adding UI - two Bootstrap jumbotrons descriptions buttons: new view added application - modify app/main.R: might noticed changed argument passed router_server function. Now default page just application URL. fact, omit argument, since\"/\" default value . Now, need add logic changing page button click: used change_page function change URL consequence, displayed view. Now, application behave like :","code":"# app/view/intro.R  box::use(   shiny[actionButton, column, div, fluidRow, h2, moduleServer, NS, observeEvent], )  #' @export ui <- function(id) {   ns <- NS(id)   fluidRow(     column(       width = 6,       div(         class = \"jumbotron\",         h2(\"Click this button to check out the table:\"),         actionButton(           inputId = ns(\"go_to_table\"),           label = \"Table\",           class = \"btn-primary btn-lg\"         )       )     ),     column(       width = 6,       div(         class = \"jumbotron\",         h2(\"Click this button to check out the chart:\"),         actionButton(           inputId = ns(\"go_to_chart\"),           label = \"Chart\",           class = \"btn-primary btn-lg\"         )       )     )   ) } # app/main.R  box::use(   shiny[a, fluidPage, moduleServer, tags, NS],   shiny.router[router_ui, router_server, route, route_link], )  box::use(   app/view/intro,   app/view/chart,   app/view/table, )  #' @export ui <- function(id) {   ns <- NS(id)    fluidPage(     tags$nav(       class = \"navbar\",       tags$ul(         class = \"nav navbar-nav\",         tags$li(           a(\"Home\", href = route_link(\"/\"))         ),         tags$li(           a(\"Table\", href = route_link(\"table\"))         ),         tags$li(           a(\"Chart\", href = route_link(\"chart\"))         )       )     ),     router_ui(       route(\"/\", intro$ui(ns(\"intro\"))),       route(\"table\", table$ui(ns(\"table\"))),       route(\"chart\", chart$ui(ns(\"chart\")))     )   ) }  #' @export server <- function(id) {   moduleServer(id, function(input, output, session) {     router_server(\"/\")      # Datasets are the only case when you need to use :: in `box`.     # This issue should be solved in the next `box` release.     data <- rhino::rhinos      intro$server(\"intro\")     table$server(\"table\", data = data)     chart$server(\"chart\", data = data)   }) } # app/view/intro.R  box::use(   shiny[actionButton, column, div, fluidRow, h2, moduleServer, NS, observeEvent],   shiny.router[change_page], )  #' @export ui <- function(id) {   ns <- NS(id)   fluidRow(     column(       width = 6,       div(         class = \"jumbotron\",         h2(\"Click this button to check out the table:\"),         actionButton(           inputId = ns(\"go_to_table\"),           label = \"Table\",           class = \"btn-primary btn-lg\"         )       )     ),     column(       width = 6,       div(         class = \"jumbotron\",         h2(\"Click this button to check out the chart:\"),         actionButton(           inputId = ns(\"go_to_chart\"),           label = \"Chart\",           class = \"btn-primary btn-lg\"         )       )     )   ) }  #' @export server <- function(id) {   moduleServer(id, function(input, output, session) {     observeEvent(input$go_to_table, {       change_page(\"table\")     })      observeEvent(input$go_to_chart, {       change_page(\"chart\")     })   }) }"},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"query-parameters","dir":"Articles","previous_headings":"","what":"Query parameters","title":"Tutorial: shiny.router in Rhino applications","text":"Another feature shiny.router can used example ability read query parameters URL. demonstrate showing can control number rows displayed table.","code":""},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"read-query-parameter","dir":"Articles","previous_headings":"Query parameters","what":"Read query parameter","title":"Tutorial: shiny.router in Rhino applications","text":"start adding ability read pageSize parameter, change number displayed rows (example opening URL: {app url}/table?pageSize=12) show table 12 rows). Modify app/view/table.R: get_query_param reads query parameters URL. value passed table set number rows. param set, display 10 rows.","code":"# app/view/table.R  box::use(   reactable,   shiny[h3, moduleServer, NS, observeEvent, reactive, req, tagList],   shiny.router[get_query_param], ) box::use(   app/logic/data_transformation[transform_data], )  #' @export ui <- function(id) {   ns <- NS(id)    tagList(     h3(\"Table\"),     reactable$reactableOutput(ns(\"table\"))   ) }  #' @export server <- function(id, data) {   moduleServer(id, function(input, output, session) {     ns <- session$ns      page_size <- reactive({       page_size <- get_query_param(\"pageSize\")        if (is.null(page_size)) {         page_size <- 10       }        as.numeric(page_size)     })      output$table <- reactable$renderReactable({       data |>         transform_data() |>         reactable$reactable(           defaultPageSize = page_size()         )     })   }) }"},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"update-query-parameter","dir":"Articles","previous_headings":"Query parameters","what":"Update query parameter","title":"Tutorial: shiny.router in Rhino applications","text":"Let’s implement opposite feature - add page size dropdown table update query parameter according value. First, add page size option table: Now can change page size using table dropdown, still update query parameter. achieve , need add one element: way changing page size modify displayed query parameter:","code":"# app/view/table.R  box::use(   reactable,   shiny[h3, moduleServer, NS, reactive, req, tagList],   shiny.router[get_query_param], )  box::use(   app/logic/data_transformation[transform_data], )  #' @export ui <- function(id) {   ns <- NS(id)    tagList(     h3(\"Table\"),     reactable$reactableOutput(ns(\"table\"))   ) }  #' @export server <- function(id, data) {   moduleServer(id, function(input, output, session) {     ns <- session$ns      page_size <- reactive({       page_size <- get_query_param(\"pageSize\")        if (is.null(page_size)) {         page_size <- 10       }        as.numeric(page_size)     })      output$table <- reactable$renderReactable({       data |>         transform_data() |>         reactable$reactable(           defaultPageSize = page_size(),           showPageSizeOptions = TRUE,           pageSizeOptions = c(5, 10, 15, 20, page_size()) |>             unique() |>             sort()         )     })   }) } # app/view/table.R  box::use(   reactable,   shiny[h3, moduleServer, NS, observeEvent, reactive, req, tagList],   shiny.router[change_page, get_query_param], )  box::use(   app/logic/data_transformation[transform_data], )  #' @export ui <- function(id) {   ns <- NS(id)    tagList(     h3(\"Table\"),     reactable$reactableOutput(ns(\"table\"))   ) }  #' @export server <- function(id, data) {   moduleServer(id, function(input, output, session) {     ns <- session$ns      page_size <- reactive({       page_size <- get_query_param(\"pageSize\")        if (is.null(page_size)) {         page_size <- 10       }        as.numeric(page_size)     })      output$table <- reactable$renderReactable({       data |>         transform_data() |>         reactable$reactable(           defaultPageSize = page_size(),           showPageSizeOptions = TRUE,           pageSizeOptions = c(5, 10, 15, 20, page_size()) |>             unique() |>             sort()         )     })      observeEvent(reactable$getReactableState(\"table\", \"pageSize\"), {       table_page_size <- reactable$getReactableState(\"table\", \"pageSize\")        if (table_page_size != page_size()) {         change_page(paste0(\"table?pageSize=\", table_page_size))       }     })   }) }"},{"path":"https://appsilon.github.io/shiny.router/articles/rhino.html","id":"page","dir":"Articles","previous_headings":"","what":"404 page","title":"Tutorial: shiny.router in Rhino applications","text":"final step, show handle situation, user tries open wrong URL. shiny.router comes default 404 page displayed case, can easily replace custom one. build new page, message button move user back home page application. Create new file called page_404.R app/view directory: Now, need add custom view router 404 page: ’s . run application try go non-existing route, see something similar :  Congratulations! succesfully upgraded Rhino application routing!","code":"# app/view/page_404.R  box::use(   shiny[a, div, h1, moduleServer, NS],   shiny.router[route_link], )  #' @export ui <- function(id) {   ns <- NS(id)    div(     h1(\"Whoops! Something went wrong!\"),     a(\"Back to home page\", href = route_link(\"/\"), class = \"btn btn-primary btn-lg\")   ) } # app/main.R  box::use(   shiny[a, fluidPage, moduleServer, tags, NS],   shiny.router[router_ui, router_server, route, route_link], ) box::use(   app/view/intro,   app/view/chart,   app/view/table,   app/view/page_404, )  #' @export ui <- function(id) {   ns <- NS(id)    fluidPage(     tags$nav(       class = \"navbar\",       tags$ul(         class = \"nav navbar-nav\",         tags$li(           a(\"Home\", href = route_link(\"/\"))         ),         tags$li(           a(\"Table\", href = route_link(\"table\"))         ),         tags$li(           a(\"Chart\", href = route_link(\"chart\"))         )       )     ),     router_ui(       route(\"/\", intro$ui(ns(\"intro\"))),       route(\"table\", table$ui(ns(\"table\"))),       route(\"chart\", chart$ui(ns(\"chart\"))),       page_404 = page_404$ui(ns(\"page_404\"))     )   ) }  ..."},{"path":"https://appsilon.github.io/shiny.router/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryszard Szymański. Maintainer, author. Jakub Nowicki. Author. Filip Stachura. Author. Dominik Krzemiński. Author. Krystian Igras. Author. Servet Ahmet Çizmeli. Contributor. Appsilon Sp. z o.o.. Copyright holder.","code":""},{"path":"https://appsilon.github.io/shiny.router/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Szymański R, Nowicki J, Stachura F, Krzemiński D, Igras K (2023). shiny.router: Basic Routing Shiny Web Applications. https://appsilon.github.io/shiny.router/, https://github.com/Appsilon/shiny.router.","code":"@Manual{,   title = {shiny.router: Basic Routing for Shiny Web Applications},   author = {Ryszard Szymański and Jakub Nowicki and Filip Stachura and Dominik Krzemiński and Krystian Igras},   year = {2023},   note = {https://appsilon.github.io/shiny.router/, https://github.com/Appsilon/shiny.router}, }"},{"path":"https://appsilon.github.io/shiny.router/index.html","id":"shinyrouter-","dir":"","previous_headings":"","what":"Basic Routing for Shiny Web Applications","title":"Basic Routing for Shiny Web Applications","text":"minimalistic router Shiny apps. Now ’s possible recreate state app, providing specific URL, like:","code":"router_ui(   route(\"<your_app_url>/main\",  mainPageShinyUI),   route(\"<your_app_url>/other\", otherPageShinyUI) )"},{"path":"https://appsilon.github.io/shiny.router/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install?","title":"Basic Routing for Shiny Web Applications","text":"’s possible install library CRAN recent version can get repo using remotes.","code":"install.packages(\"shiny.router\") remotes::install_github(\"Appsilon/shiny.router\")"},{"path":"https://appsilon.github.io/shiny.router/index.html","id":"how-to-use-it","dir":"","previous_headings":"","what":"How to use it?","title":"Basic Routing for Shiny Web Applications","text":"Basic usage: Check tutorial details start using shiny.router.","code":"library(shiny) library(shiny.router)  root_page <- div(h2(\"Root page\")) other_page <- div(h3(\"Other page\"))  ui <- fluidPage(   title = \"Router demo\",   router_ui(     route(\"/\", root_page),     route(\"other\", other_page)   ) )  server <- function(input, output, session) {   router_server() }  shinyApp(ui, server)"},{"path":"https://appsilon.github.io/shiny.router/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Basic Routing for Shiny Web Applications","text":"application showcases shiny.router features can found :  built using two Appsilon Open Source packages: rhino - R package designed help building high quality, enterprise-grade Shiny applications speed. shiny.fluent - Microsoft’s Fluent UI Shiny apps. can also visit examples directory complete samples.","code":""},{"path":"https://appsilon.github.io/shiny.router/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute?","title":"Basic Routing for Shiny Web Applications","text":"want contribute project please submit regular PR, ’re done new feature bug fix. Reporting bug also helpful - please use GitHub issues describe problem detailed possible.","code":""},{"path":"https://appsilon.github.io/shiny.router/index.html","id":"appsilon","dir":"","previous_headings":"","what":"Appsilon","title":"Basic Routing for Shiny Web Applications","text":"Appsilon Posit (formerly RStudio) Full Service Certified Partner. Learn appsilon.com. Get touch opensource@appsilon.com Check Open Source tools.","code":""},{"path":"https://appsilon.github.io/shiny.router/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Title","title":"Title","text":"Short description (reference issue).","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/PAGE_404_ROUTE.html","id":null,"dir":"Reference","previous_headings":"","what":"Default 404 page — PAGE_404_ROUTE","title":"Default 404 page — PAGE_404_ROUTE","text":"default 404 page.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/PAGE_404_ROUTE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default 404 page — PAGE_404_ROUTE","text":"","code":"PAGE_404_ROUTE"},{"path":"https://appsilon.github.io/shiny.router/reference/PAGE_404_ROUTE.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default 404 page — PAGE_404_ROUTE","text":"object class character length 1.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/attach_attribs.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach 'router-hidden' class to single page UI content — attach_attribs","title":"Attach 'router-hidden' class to single page UI content — attach_attribs","text":"Covered UI types Shiny/htmltools tags tag lists html templates. case tag list (tagList) html template (htmlTemplate) 'div' wrapper 'router-hidden' class added.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/attach_attribs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach 'router-hidden' class to single page UI content — attach_attribs","text":"","code":"attach_attribs(ui, path)"},{"path":"https://appsilon.github.io/shiny.router/reference/attach_attribs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach 'router-hidden' class to single page UI content — attach_attribs","text":"ui Single page UI content created proper html tags tag list. path Single page path name. Attached data-path attribute.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/callback_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a mapping between a UI element and a server callback. — callback_mapping","title":"Create a mapping between a UI element and a server callback. — callback_mapping","text":"Create mapping UI element server callback.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/callback_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a mapping between a UI element and a server callback. — callback_mapping","text":"","code":"callback_mapping(path, ui, server = NA)"},{"path":"https://appsilon.github.io/shiny.router/reference/callback_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a mapping between a UI element and a server callback. — callback_mapping","text":"path Bookmark id. ui Valid Shiny user interface. server Function called within global server function given","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/callback_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a mapping between a UI element and a server callback. — callback_mapping","text":"list ui server fields","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/change_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the currently displayed page. — change_page","title":"Change the currently displayed page. — change_page","text":"Works sending message reactive input binding client side, tells page.js update window URL accordingly, tells client side shiny reactive input binding changed, comes back router callback function observers watching get_page() similar.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/change_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the currently displayed page. — change_page","text":"","code":"change_page(page, session = shiny::getDefaultReactiveDomain(), mode = \"push\")"},{"path":"https://appsilon.github.io/shiny.router/reference/change_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the currently displayed page. — change_page","text":"page new URL go . just path component URL, optional query, e.g. \"/learner?id=%d\" session current Shiny session. mode (\"replace\" \"push\") whether replace current history push new one. shiny::updateQueryString.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/cleanup_hashpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Formats a URL fragment into a hash path starting with ","title":"Formats a URL fragment into a hash path starting with ","text":"Formats URL fragment hash path starting \"#!/\"","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/cleanup_hashpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formats a URL fragment into a hash path starting with ","text":"","code":"cleanup_hashpath(hashpath)"},{"path":"https://appsilon.github.io/shiny.router/reference/cleanup_hashpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formats a URL fragment into a hash path starting with ","text":"hashpath character hash path","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/cleanup_hashpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formats a URL fragment into a hash path starting with ","text":"character formatted hash path","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/create_router_callback.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function creating a router callback function.\nOne need to call router callback with Shiny input and output in server code. — create_router_callback","title":"Internal function creating a router callback function.\nOne need to call router callback with Shiny input and output in server code. — create_router_callback","text":"Internal function creating router callback function. One need call router callback Shiny input output server code.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/create_router_callback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function creating a router callback function.\nOne need to call router callback with Shiny input and output in server code. — create_router_callback","text":"","code":"create_router_callback(root, routes = NULL)"},{"path":"https://appsilon.github.io/shiny.router/reference/create_router_callback.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function creating a router callback function.\nOne need to call router callback with Shiny input and output in server code. — create_router_callback","text":"root Main route invalid routes redirect. routes routes (list).","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/create_router_callback.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function creating a router callback function.\nOne need to call router callback with Shiny input and output in server code. — create_router_callback","text":"Router callback.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/disable_bootstrap_on_bookmark.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix conflicts when some bookmark uses bootstrap — disable_bootstrap_on_bookmark","title":"Fix conflicts when some bookmark uses bootstrap — disable_bootstrap_on_bookmark","text":"function dynamically removes bootstrap dependency user opens specified bookmark. inserted head bootstrap page.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/disable_bootstrap_on_bookmark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix conflicts when some bookmark uses bootstrap — disable_bootstrap_on_bookmark","text":"","code":"disable_bootstrap_on_bookmark(bookmark)"},{"path":"https://appsilon.github.io/shiny.router/reference/disable_bootstrap_on_bookmark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix conflicts when some bookmark uses bootstrap — disable_bootstrap_on_bookmark","text":"bookmark Bookmark name bootstrap dependency suppressed.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/dot-onAttach.html","id":null,"dir":"Reference","previous_headings":"","what":"On Load — .onAttach","title":"On Load — .onAttach","text":"Load","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/dot-onAttach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"On Load — .onAttach","text":"","code":".onAttach(libname, pkgname)"},{"path":"https://appsilon.github.io/shiny.router/reference/dot-onAttach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"On Load — .onAttach","text":"libname library name pkgname package name","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/extract_link_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract link name — extract_link_name","title":"Extract link name — extract_link_name","text":"Strips first 3 character, assuming : \"#!/\".","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/extract_link_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract link name — extract_link_name","text":"","code":"extract_link_name(path)"},{"path":"https://appsilon.github.io/shiny.router/reference/extract_link_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract link name — extract_link_name","text":"path character link path","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/extract_link_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract link name — extract_link_name","text":"stripped link","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/get_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to retrieve just the ","title":"Convenience function to retrieve just the ","text":"corresponds might called \"path\" component URL, except using URLs hashes path & query (e.g.: http://www.example.com/#!/virtual/path?=params)","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/get_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to retrieve just the ","text":"","code":"get_page(session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.router/reference/get_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to retrieve just the ","text":"session current Shiny Session","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/get_page.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function to retrieve just the ","text":"current page length-1 character vector, FALSE input value.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/get_query_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Query Parameters — get_query_param","title":"Get Query Parameters — get_query_param","text":"Convenience function retrieve params part requested page. param values returned come \"httr::parse_url()\"","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/get_query_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Query Parameters — get_query_param","text":"","code":"get_query_param(field = NULL, session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.router/reference/get_query_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Query Parameters — get_query_param","text":"field provided, retrieve param name. (Otherwise, return params) session Shiny session","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/get_query_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Query Parameters — get_query_param","text":"full list params URL (), list. , single requested param (present). NULL input, params.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/get_url_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to get url hash with #!. — get_url_hash","title":"Internal function to get url hash with #!. — get_url_hash","text":"Internal function get url hash #!.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/get_url_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to get url hash with #!. — get_url_hash","text":"","code":"get_url_hash(session = shiny::getDefaultReactiveDomain())"},{"path":"https://appsilon.github.io/shiny.router/reference/get_url_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to get url hash with #!. — get_url_hash","text":"session current Shiny Session","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/get_url_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to get url hash with #!. — get_url_hash","text":"Reactive hash value.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/grapes-colon-colon-colon-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"::: hack solution — %:::%","title":"::: hack solution — %:::%","text":"::: hack solution","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/grapes-colon-colon-colon-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"::: hack solution — %:::%","text":"","code":"pkg %:::% name"},{"path":"https://appsilon.github.io/shiny.router/reference/grapes-colon-colon-colon-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"::: hack solution — %:::%","text":"pkg package name name function name","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/grapes-colon-colon-colon-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"::: hack solution — %:::%","text":"function","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/is_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Is page — is_page","title":"Is page — is_page","text":"Tell reactive chain halt specified page. Useful making sure waste cycles re-rendering UI pages currently displayed.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/is_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is page — is_page","text":"","code":"is_page(page, session = shiny::getDefaultReactiveDomain(), ...)"},{"path":"https://appsilon.github.io/shiny.router/reference/is_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is page — is_page","text":"page page display. match one paths sent session Shiny session ... parameters sent shiny::req() router.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/log_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to print out log messages into Shiny\nusing cat() and stderr(), as described on\nhttps://shiny.rstudio.com/articles/debugging.html — log_msg","title":"Helper function to print out log messages into Shiny\nusing cat() and stderr(), as described on\nhttps://shiny.rstudio.com/articles/debugging.html — log_msg","text":"can print lot, silent unless shiny.router.debug option set.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/log_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to print out log messages into Shiny\nusing cat() and stderr(), as described on\nhttps://shiny.rstudio.com/articles/debugging.html — log_msg","text":"","code":"log_msg(...)"},{"path":"https://appsilon.github.io/shiny.router/reference/log_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to print out log messages into Shiny\nusing cat() and stderr(), as described on\nhttps://shiny.rstudio.com/articles/debugging.html — log_msg","text":"... params get passed cat(). automatically wrapped shiny::isolate(), can print reactive values without much worry.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/make_router.html","id":null,"dir":"Reference","previous_headings":"","what":"[Deprecated] Creates router. — make_router","title":"[Deprecated] Creates router. — make_router","text":"Returned callback needs called within Shiny server code.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/make_router.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"[Deprecated] Creates router. — make_router","text":"","code":"make_router(default, ..., page_404 = page404())"},{"path":"https://appsilon.github.io/shiny.router/reference/make_router.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"[Deprecated] Creates router. — make_router","text":"default Main route invalid routes redirect. ... routes defined shiny.router::route function. page_404 Styling page wrong bookmark open. See page404.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/make_router.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"[Deprecated] Creates router. — make_router","text":"Shiny router callback run server code Shiny input output   lists.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/make_router.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"[Deprecated] Creates router. — make_router","text":"","code":"if (FALSE) { router <- make_router(   route(\"/\", root_page),   route(\"/other\", other_page),   page_404 = page404(     message404 = \"Please check if you passed correct bookmark name!\") ) }"},{"path":"https://appsilon.github.io/shiny.router/reference/page404.html","id":null,"dir":"Reference","previous_headings":"","what":"404 page — page404","title":"404 page — page404","text":"page appear path wrong.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/page404.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"404 page — page404","text":"","code":"page404(page = NULL, message404 = NULL)"},{"path":"https://appsilon.github.io/shiny.router/reference/page404.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"404 page — page404","text":"page shiny page style, e.g. shiny::tags$div(h1(\"found\")) message404 message display 404 website","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/page404.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"404 page — page404","text":"","code":"page404() # shiny::tags$div(h1(\"Not found\")) #> <div> #>   <h1>Not found<\/h1> #> <\/div> page404(message404 = \"ABC\") # shiny::tags$div(h1(\"ABC\")) #> <div> #>   <h1>ABC<\/h1> #> <\/div>"},{"path":"https://appsilon.github.io/shiny.router/reference/parse_url_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse url and build GET parameters list — parse_url_path","title":"Parse url and build GET parameters list — parse_url_path","text":"Extract info url path parameters follow ? sign.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/parse_url_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse url and build GET parameters list — parse_url_path","text":"","code":"parse_url_path(url_path)"},{"path":"https://appsilon.github.io/shiny.router/reference/parse_url_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse url and build GET parameters list — parse_url_path","text":"url_path character link url","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/parse_url_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse url and build GET parameters list — parse_url_path","text":"list containing two objects: path query, list","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/parse_url_path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse url and build GET parameters list — parse_url_path","text":"parse_url_path allows parsing parameters lists url. See examples. Note query string appear #! may cause browser refresh thus reset Shiny session.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/parse_url_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse url and build GET parameters list — parse_url_path","text":"","code":"parse_url_path(\"?a=1&b=foo\") #> $path #> [1] \"\" #>  #> $query #> $query$a #> [1] \"1\" #>  #> $query$b #> [1] \"foo\" #>  #>  parse_url_path(\"?a=1&b[1]=foo&b[2]=bar/#!/\") #> $path #> [1] \"\" #>  #> $query #> $query$a #> [1] \"1\" #>  #> $query$b #> $query$b$`1` #> [1] \"foo\" #>  #> $query$b$`2` #> [1] \"bar\" #>  #>  #>  parse_url_path(\"?a=1&b[1]=foo&b[2]=bar/#!/other_page\") #> $path #> [1] \"other_page\" #>  #> $query #> $query$a #> [1] \"1\" #>  #> $query$b #> $query$b$`1` #> [1] \"foo\" #>  #> $query$b$`2` #> [1] \"bar\" #>  #>  #>  parse_url_path(\"www.foo.bar/#!/other_page\") #> $path #> [1] \"other_page\" #>  #> $query #> NULL #>  parse_url_path(\"www.foo.bar?a=1&b[1]=foo&b[2]=bar/#!/other\") #> $path #> [1] \"other\" #>  #> $query #> $query$a #> [1] \"1\" #>  #> $query$b #> $query$b$`1` #> [1] \"foo\" #>  #> $query$b$`2` #> [1] \"bar\" #>  #>  #>  parse_url_path(\"#!/?a=1&b[1]=foo&b[2]=bar\") #> $path #> [1] \"\" #>  #> $query #> $query$a #> [1] \"1\" #>  #> $query$b #> $query$b$`1` #> [1] \"foo\" #>  #> $query$b$`2` #> [1] \"bar\" #>  #>  #>  parse_url_path(\"#!/other_page?a=1&b[1]=foo&b[2]=bar\") #> $path #> [1] \"other_page\" #>  #> $query #> $query$a #> [1] \"1\" #>  #> $query$b #> $query$b$`1` #> [1] \"foo\" #>  #> $query$b$`2` #> [1] \"bar\" #>  #>  #>  parse_url_path(\"www.foo.bar/#!/other?a=1&b[1]=foo&b[2]=bar\") #> $path #> [1] \"other\" #>  #> $query #> $query$a #> [1] \"1\" #>  #> $query$b #> $query$b$`1` #> [1] \"foo\" #>  #> $query$b$`2` #> [1] \"bar\" #>  #>  #>"},{"path":"https://appsilon.github.io/shiny.router/reference/route.html","id":null,"dir":"Reference","previous_headings":"","what":"Create single route configuration. — route","title":"Create single route configuration. — route","text":"Create single route configuration.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/route.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create single route configuration. — route","text":"","code":"route(path, ui, server = NA)"},{"path":"https://appsilon.github.io/shiny.router/reference/route.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create single route configuration. — route","text":"path Website route. ui Valid Shiny user interface. server Function called callback server side [deprecated]","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/route.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create single route configuration. — route","text":"route configuration.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/route.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create single route configuration. — route","text":"","code":"if (FALSE) { route(\"/\", shiny::tags$div(shiny::tags$span(\"Hello world\")))  route(\"main\", shiny::tags$div(h1(\"Main page\"), p(\"Lorem ipsum.\"))) }"},{"path":"https://appsilon.github.io/shiny.router/reference/route_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Route link — route_link","title":"Route link — route_link","text":"Adds /#!/ prefix link.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/route_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Route link — route_link","text":"","code":"route_link(path)"},{"path":"https://appsilon.github.io/shiny.router/reference/route_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Route link — route_link","text":"path character path","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/route_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Route link — route_link","text":"route link","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/route_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Route link — route_link","text":"","code":"route_link(\"abc\") # /#!/abc #> [1] \"./#!/abc\""},{"path":"https://appsilon.github.io/shiny.router/reference/router_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Create router pages server callback — router_server","title":"Create router pages server callback — router_server","text":"Server part router.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/router_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create router pages server callback — router_server","text":"","code":"router_server(root_page = \"/\", env = parent.frame())"},{"path":"https://appsilon.github.io/shiny.router/reference/router_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create router pages server callback — router_server","text":"root_page Main page path. env Environment (advanced usage).","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/router_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create router pages server callback — router_server","text":"Router pages server callback.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/router_server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create router pages server callback — router_server","text":"","code":"if (FALSE) {   server <- function(input, output, session) {     router_server(root_page = \"/\")   } }"},{"path":"https://appsilon.github.io/shiny.router/reference/router_server_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Create router pages server callback — router_server_internal","title":"Create router pages server callback — router_server_internal","text":"Create router pages server callback","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/router_server_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create router pages server callback — router_server_internal","text":"","code":"router_server_internal(router)"},{"path":"https://appsilon.github.io/shiny.router/reference/router_server_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create router pages server callback — router_server_internal","text":"router Router pages object. See make_router.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/router_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Create router UI — router_ui","title":"Create router UI — router_ui","text":"Creates router UI Shiny applications.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/router_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create router UI — router_ui","text":"","code":"router_ui(default, ..., page_404 = page404(), env = parent.frame())"},{"path":"https://appsilon.github.io/shiny.router/reference/router_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create router UI — router_ui","text":"default Main route invalid routes redirect. ... routes defined shiny.router::route function. page_404 Styling page invalid route open. See page404. env Environment (advanced usage), makes possible use shiny.router inside shiny modules.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/router_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create router UI — router_ui","text":"Application UI wrapped router.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/router_ui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create router UI — router_ui","text":"defining router inside shiny module,   assume namespacing function defined UI named ns.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/router_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create router UI — router_ui","text":"","code":"if (FALSE) {   ui <- function() {     router_ui(       route(\"/\", root_page(id = \"root\")),       route(\"/other\", other_page(id = \"other\")),       page_404 = page404(         message404 = \"Please check if you passed correct bookmark name!\")     )   } }"},{"path":"https://appsilon.github.io/shiny.router/reference/router_ui_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates router UI — router_ui_internal","title":"Creates router UI — router_ui_internal","text":"Creates router UI","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/router_ui_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates router UI — router_ui_internal","text":"","code":"router_ui_internal(router)"},{"path":"https://appsilon.github.io/shiny.router/reference/router_ui_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates router UI — router_ui_internal","text":"router Router pages object. See make_router.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/router_ui_internal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates router UI — router_ui_internal","text":"list shiny tags adds \"router-page-wrapper\" div embeds router JavaScript script.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/valid_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function that validates that path is defined in routes. — valid_path","title":"Internal function that validates that path is defined in routes. — valid_path","text":"Internal function validates path defined routes.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/valid_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function that validates that path is defined in routes. — valid_path","text":"","code":"valid_path(routes, path)"},{"path":"https://appsilon.github.io/shiny.router/reference/valid_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function that validates that path is defined in routes. — valid_path","text":"routes routes (list). path path.","code":""},{"path":"https://appsilon.github.io/shiny.router/reference/valid_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function that validates that path is defined in routes. — valid_path","text":"Boolean value indicating path defined.","code":""}]
